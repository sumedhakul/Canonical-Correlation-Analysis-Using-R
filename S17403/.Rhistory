library(stats)
library(readr)
data <- read_csv("E:/Sumedha(important)/4th Year 1st Sem/Statistics/ST 405 - Multivariate methods II/project/Algerian_forest_fires_dataset_UPDATE.csv",
skip = 1)
View(data)
problems()
new_data <- data[-c(123, 124), ]
View(new_data)
# Assuming your dataset is stored in 'data', check the structure
str(new_data)
head(new_data)
# Check for missing values
sum(is.na(new_data))
# Remove rows with any missing values
new_data<- na.omit(new_data)
# Check for missing values
sum(is.na(new_data))
# install.packages("car")
library(car)
library(dplyr)
new_data <- new_data %>%
mutate_at(vars(FFMC,DMC,DC,ISI,BUI,FWI), as.numeric)
# Check the class and structure of the data frame
str(new_data)
new_data <- new_data %>%
mutate_at(vars(Temperature, RH,Ws,Rain), as.numeric)
vif_X <- vif(new_data[, c("Temperature", "RH","Ws","Rain")])
vif_Y <- vif(new_data[, c("FFMC", "DMC","DC","ISI","BUI","FWI")])
vif_X
knitr::opts_chunk$set(echo = TRUE)
library(stats)
library(readr)
data <- read_csv("E:/Sumedha(important)/4th Year 1st Sem/Statistics/ST 405 - Multivariate methods II/project/Algerian_forest_fires_dataset_UPDATE.csv",
skip = 1)
View(data)
problems()
new_data <- data[-c(123, 124), ]
View(new_data)
# Assuming your dataset is stored in 'data', check the structure
str(new_data)
head(new_data)
# Check for missing values
sum(is.na(new_data))
# Remove rows with any missing values
new_data<- na.omit(new_data)
# Check for missing values
sum(is.na(new_data))
library(car)
library(dplyr)
new_data <- new_data %>%
mutate_at(vars(FFMC,DMC,DC,ISI,BUI,FWI), as.numeric)
# Check the class and structure of the data frame
str(new_data)
new_data <- new_data %>%
mutate_at(vars(Temperature, RH,Ws,Rain), as.numeric)
summary(new_data)
xtabs(~Classes, data = new_data)
Weather <- new_data[, c("Temperature", "RH","Ws","Rain")]
FWi_compo <- new_data[, c("FFMC", "DMC","DC","ISI","BUI","FWI")]
library(ggplot2)
library(GGally)
library(CCA)
ggpairs(Weather)
ggpairs(FWI_compo)
ggpairs(FWI_compo)
FWI_compo <- new_data[, c("FFMC", "DMC","DC","ISI","BUI","FWI")]
ggpairs(FWI_compo)
library(ggplot2)
library(GGally)
library(CCA)
ggpairs(Weather)
ggpairs(FWI_compo)
# correlations
matcor(psych, acad)
# correlations
matcor(Weather, FWI_compo)
####Canonical correlation
cc1 <- cc(Weather, FWI_compo)
# display the canonical correlations
cc1$cor
# raw canonical coefficients
cc1[3:4]
# compute canonical loadings
cc2 <- comput(psych, acad, cc1)
####Canonical correlation
cc1 <- cc(Weather, FWI_compo)
# display the canonical correlations
cc1$cor
# raw canonical coefficients
cc1[3:4]
# compute canonical loadings
cc2 <- comput(Weather, FWI_compo)
# compute canonical loadings
cc2 <- comput(Weather,FWI_compo)
# compute canonical loadings
cc2 <- comput(Weather,FWI_compo,cc1)
# display canonical loadings
cc2[3:6]
install.packages("CCP")
---
title: "S17403 - Mini Project 02"
---
title: "S17403 - Mini Project 02"
---
title: "S17403 - Mini Project 02"
library(stats)
library(readr)
data <- read_csv("E:/Sumedha(important)/4th Year 1st Sem/Statistics/ST 405 - Multivariate methods II/project/Algerian_forest_fires_dataset_UPDATE.csv",
skip = 1)
View(data)
problems()
new_data <- data[-c(123, 124), ]
View(new_data)
# Assuming your dataset is stored in 'data', check the structure
str(new_data)
head(new_data)
# Check for missing values
sum(is.na(new_data))
# Remove rows with any missing values
new_data<- na.omit(new_data)
# Check for missing values
sum(is.na(new_data))
knitr::opts_chunk$set(echo = TRUE)
library(stats)
library(readr)
data <- read_csv("E:/Sumedha(important)/4th Year 1st Sem/Statistics/ST 405 - Multivariate methods II/project/Algerian_forest_fires_dataset_UPDATE.csv",
skip = 1)
View(data)
problems()
new_data <- data[-c(123, 124), ]
View(new_data)
# Assuming your dataset is stored in 'data', check the structure
str(new_data)
head(new_data)
# Check for missing values
sum(is.na(new_data))
# Remove rows with any missing values
new_data<- na.omit(new_data)
# Check for missing values
sum(is.na(new_data))
library(car)
library(dplyr)
new_data <- new_data %>%
mutate_at(vars(FFMC,DMC,DC,ISI,BUI,FWI), as.numeric)
# Check the class and structure of the data frame
str(new_data)
new_data <- new_data %>%
mutate_at(vars(Temperature, RH,Ws,Rain), as.numeric)
summary(new_data)
xtabs(~Classes, data = new_data)
Weather <- new_data[, c("Temperature", "RH","Ws","Rain")]
FWI_compo <- new_data[, c("FFMC", "DMC","DC","ISI","BUI","FWI")]
library(ggplot2)
library(GGally)
library(CCA)
ggpairs(Weather)
ggpairs(FWI_compo)
# correlations
matcor(Weather, FWI_compo)
####Canonical correlation
cc1 <- cc(Weather, FWI_compo)
# display the canonical correlations
cc1$cor
# raw canonical coefficients
cc1[3:4]
# compute canonical loadings
cc2 <- comput(Weather,FWI_compo,cc1)
# display canonical loadings
cc2[3:6]
library(CCP)
# tests of canonical dimensions
rho <- cc1$cor
## Define number of observations, number of variables in first set, and number of variables in the second set.
n <- dim(Weather)[1]
p <- length(Weather)
q <- length(FWI_compo)
## Calculate p-values using the F-approximations of different test statistics:
p.asym(rho, n, p, q, tstat = "Wilks")
p.asym(rho, n, p, q, tstat = "Hotelling")
p.asym(rho, n, p, q, tstat = "Pillai")
p.asym(rho, n, p, q, tstat = "Roy")
# standardized psych canonical coefficients diagonal matrix of Weather sd's
s1 <- diag(sqrt(diag(cov(Weather))))
s1 %*% cc1$xcoef
# standardized acad canonical coefficients diagonal matrix of acad FWI_Compo's
s2 <- diag(sqrt(diag(cov(FWI_compo))))
s2 %*% cc1$ycoef
library("CCA")
correl <- matcor(Weather, FWI_compo)
img.matcor(correl, type = 2)
